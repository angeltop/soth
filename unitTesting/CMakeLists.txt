#
#  Copyright
#


ADD_DEFINITIONS(-DDEBUG=2)
INCLUDE_DIRECTORIES(${CMAKE_SOURCE_DIR}/include)

# --- talgebra ---
SET(EXECUTABLE_NAME talgebra)
ADD_EXECUTABLE(${EXECUTABLE_NAME}
  talgebra.cpp)
TARGET_LINK_LIBRARIES(${EXECUTABLE_NAME}
  ${PROJECT_NAME})
LIST2STRING(_cf "${${PROJECT_NAME}_src_CXXFLAGS}")
LIST2STRING(_lf "${${PROJECT_NAME}_src_LDFLAGS}")
SET_TARGET_PROPERTIES(${EXECUTABLE_NAME}
  PROPERTIES
  COMPILE_FLAGS "${_cf}"
  LINK_FLAGS "${_lf}"
)

# --- tsubmatrix ---
SET(EXECUTABLE_NAME tsubmatrix)
ADD_EXECUTABLE(${EXECUTABLE_NAME}
  tsubmatrix.cpp)
TARGET_LINK_LIBRARIES(${EXECUTABLE_NAME}
  ${PROJECT_NAME})
LIST2STRING(_cf "${${PROJECT_NAME}_src_CXXFLAGS}")
LIST2STRING(_lf "${${PROJECT_NAME}_src_LDFLAGS}")
SET_TARGET_PROPERTIES(${EXECUTABLE_NAME}
  PROPERTIES
  COMPILE_FLAGS "${_cf}"
  LINK_FLAGS "${_lf}"
)

# --- tqr ---
SET(EXECUTABLE_NAME tqr)
ADD_EXECUTABLE(${EXECUTABLE_NAME}
  tqr.cpp)
TARGET_LINK_LIBRARIES(${EXECUTABLE_NAME}
  ${PROJECT_NAME})
LIST2STRING(_cf "${${PROJECT_NAME}_src_CXXFLAGS}")
LIST2STRING(_lf "${${PROJECT_NAME}_src_LDFLAGS}")
SET_TARGET_PROPERTIES(${EXECUTABLE_NAME}
  PROPERTIES
  COMPILE_FLAGS "${_cf}"
  LINK_FLAGS "${_lf}"
)

# --- tstage ---
SET(EXECUTABLE_NAME tstage)
ADD_EXECUTABLE(${EXECUTABLE_NAME}
  tstage.cpp)
TARGET_LINK_LIBRARIES(${EXECUTABLE_NAME}
  ${PROJECT_NAME})
LIST2STRING(_cf "${${PROJECT_NAME}_src_CXXFLAGS}")
LIST2STRING(_lf "${${PROJECT_NAME}_src_LDFLAGS}")
SET_TARGET_PROPERTIES(${EXECUTABLE_NAME}
  PROPERTIES
  COMPILE_FLAGS "${_cf}"
  LINK_FLAGS "${_lf}"
)


# --- tdestructiveQR ---
SET(EXECUTABLE_NAME tdestructiveQR)
ADD_EXECUTABLE(${EXECUTABLE_NAME}
  tdestructiveQR.cpp)
TARGET_LINK_LIBRARIES(${EXECUTABLE_NAME}
  ${PROJECT_NAME})
LIST2STRING(_cf "${${PROJECT_NAME}_src_CXXFLAGS}")
LIST2STRING(_lf "${${PROJECT_NAME}_src_LDFLAGS}")
SET_TARGET_PROPERTIES(${EXECUTABLE_NAME}
  PROPERTIES
  COMPILE_FLAGS "${_cf}"
  LINK_FLAGS "${_lf}"
)

# --- thcod ---
SET(EXECUTABLE_NAME thcod)
ADD_EXECUTABLE(${EXECUTABLE_NAME}
  thcod.cpp)
TARGET_LINK_LIBRARIES(${EXECUTABLE_NAME}
  ${PROJECT_NAME})
LIST2STRING(_cf "${${PROJECT_NAME}_src_CXXFLAGS}")
LIST2STRING(_lf "${${PROJECT_NAME}_src_LDFLAGS}")
SET_TARGET_PROPERTIES(${EXECUTABLE_NAME}
  PROPERTIES
  COMPILE_FLAGS "${_cf}"
  LINK_FLAGS "${_lf}"
)

# --- texhcod ---
SET(EXECUTABLE_NAME texhcod)
ADD_EXECUTABLE(${EXECUTABLE_NAME}
  texhcod.cpp)
TARGET_LINK_LIBRARIES(${EXECUTABLE_NAME}
  ${PROJECT_NAME})
LIST2STRING(_cf "${${PROJECT_NAME}_src_CXXFLAGS}")
LIST2STRING(_lf "${${PROJECT_NAME}_src_LDFLAGS}")
SET_TARGET_PROPERTIES(${EXECUTABLE_NAME}
  PROPERTIES
  COMPILE_FLAGS "${_cf}"
  LINK_FLAGS "${_lf}"
)

# --- tgivens ---
SET(EXECUTABLE_NAME tgivens)
ADD_EXECUTABLE(${EXECUTABLE_NAME}
  tgivens.cpp)
TARGET_LINK_LIBRARIES(${EXECUTABLE_NAME}
  ${PROJECT_NAME})
LIST2STRING(_cf "${${PROJECT_NAME}_src_CXXFLAGS}")
LIST2STRING(_lf "${${PROJECT_NAME}_src_LDFLAGS}")
SET_TARGET_PROPERTIES(${EXECUTABLE_NAME}
  PROPERTIES
  COMPILE_FLAGS "${_cf}"
  LINK_FLAGS "${_lf}"
)

# --- tasearch ---
SET(EXECUTABLE_NAME tasearch)
ADD_EXECUTABLE(${EXECUTABLE_NAME}
  tasearch.cpp)
TARGET_LINK_LIBRARIES(${EXECUTABLE_NAME}
  ${PROJECT_NAME})
LIST2STRING(_cf "${${PROJECT_NAME}_src_CXXFLAGS}")
LIST2STRING(_lf "${${PROJECT_NAME}_src_LDFLAGS}")
SET_TARGET_PROPERTIES(${EXECUTABLE_NAME}
  PROPERTIES
  COMPILE_FLAGS "${_cf}"
  LINK_FLAGS "${_lf}"
)

# --- trandom ---
SET(EXECUTABLE_NAME trandom)
ADD_EXECUTABLE(${EXECUTABLE_NAME}
  trandom.cpp)
TARGET_LINK_LIBRARIES(${EXECUTABLE_NAME}
  ${PROJECT_NAME})
LIST2STRING(_cf "${${PROJECT_NAME}_src_CXXFLAGS}")
LIST2STRING(_lf "${${PROJECT_NAME}_src_LDFLAGS}")
SET_TARGET_PROPERTIES(${EXECUTABLE_NAME}
  PROPERTIES
  COMPILE_FLAGS "${_cf}"
  LINK_FLAGS "${_lf}"
)

# --- tsvd ---
SET(EXECUTABLE_NAME tsvd)
ADD_EXECUTABLE(${EXECUTABLE_NAME}
  tsvd.cpp)
TARGET_LINK_LIBRARIES(${EXECUTABLE_NAME}
  ${PROJECT_NAME})
LIST2STRING(_cf "${${PROJECT_NAME}_src_CXXFLAGS}")
LIST2STRING(_lf "${${PROJECT_NAME}_src_LDFLAGS}")
SET_TARGET_PROPERTIES(${EXECUTABLE_NAME}
  PROPERTIES
  COMPILE_FLAGS "${_cf}"
  LINK_FLAGS "${_lf}"
)


#LINK_DIRECTORIES(${${PROJECT_NAME}_BINARY_DIR}/src)

